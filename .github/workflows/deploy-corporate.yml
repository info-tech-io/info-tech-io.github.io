name: Deploy InfoTech.io Corporate Site

on:
  repository_dispatch:
    types: [corporate-site-updated]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug mode'
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-corporate"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout hub repository
        uses: actions/checkout@v4

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.148.0'
          extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Checkout hugo-templates for building
        uses: actions/checkout@v4
        with:
          repository: info-tech-io/hugo-templates
          token: ${{ secrets.PAT_TOKEN }}
          path: hugo-templates

      - name: Prepare build environment
        run: |
          echo "üèóÔ∏è Preparing corporate site build environment..."

          # Clean and create build output directory
          rm -rf build-output
          mkdir -p build-output

          # Setup hugo-templates
          cd hugo-templates
          # Initialize all submodules
          git submodule update --init --recursive
          npm install || echo "npm install failed, continuing..."
          cd ..

      - name: Build Corporate Site
        run: |
          echo "üè¢ Building InfoTech.io Corporate Site..."

          # Clone corporate content
          git clone https://github.com/info-tech-io/info-tech.git content-info-tech

          # Build corporate site to root
          cd hugo-templates
          chmod +x scripts/build.sh
          cp -r ../content-info-tech/docs ./module-content

          # Build with or without debug mode
          if [ "${{ github.event.inputs.debug }}" = "true" ]; then
            scripts/build.sh --config ./module-content/module.json --content ./module-content/content --output ../build-output --force --debug --verbose
          else
            scripts/build.sh --config ./module-content/module.json --content ./module-content/content --output ../build-output --force
          fi
          cd ..

          echo "‚úÖ Corporate site built successfully!"

      - name: Create fallback pages if needed
        run: |
          echo "üìù Creating fallback pages..."

          # Create docs directory index if it doesn't exist
          mkdir -p build-output/docs

          if [ ! -f "build-output/docs/index.html" ]; then
            echo "Creating documentation index placeholder..."
            cat > build-output/docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>InfoTech.io Documentation</title>
              <meta name="description" content="Technical documentation for all InfoTech.io products">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <meta http-equiv="refresh" content="0; url=/">
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      margin: 0;
                      padding: 40px;
                      text-align: center;
                      background: #fafafa;
                  }
                  .container {
                      max-width: 600px;
                      margin: 0 auto;
                      background: white;
                      border-radius: 12px;
                      padding: 40px;
                      box-shadow: 0 2px 20px rgba(0,0,0,0.1);
                  }
                  .header { color: #333; margin-bottom: 20px; }
                  .message { color: #666; margin-bottom: 30px; line-height: 1.6; }
                  .link { color: #1da1f2; text-decoration: none; font-weight: 600; }
                  .link:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1 class="header">üìö InfoTech.io Documentation</h1>
                  <p class="message">
                      Product documentation is being deployed separately.<br>
                      Redirecting you to the main site...
                  </p>
                  <p>
                      <a href="/" class="link">üè† Return to InfoTech.io</a>
                  </p>
              </div>
          </body>
          </html>
          EOF
          fi

      - name: Build Summary
        run: |
          echo "üéØ Corporate Site Build Summary:"
          echo "üìä Total files: $(find build-output -type f | wc -l)"
          echo "üì¶ Total size: $(du -sh build-output | cut -f1)"
          echo "üìÑ Key files:"
          ls -la build-output/*.html 2>/dev/null | head -5 || echo "  No HTML files in root"
          echo "‚úÖ Corporate site build completed successfully!"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build-output

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4